import{_ as t,c as a,o as i,ag as n}from"./chunks/framework.C6Ot-a7E.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/jsdoc.md","filePath":"zh/jsdoc.md","lastUpdated":1748703471000}'),d={name:"zh/jsdoc.md"};function e(o,s,p,l,r,h){return i(),a("div",null,s[0]||(s[0]=[n(`<h3 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { JsDocHandler  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不支持 tree-shaking 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { JsDocHandler } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/lib/jsdoc/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 只支持 ESM 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { JsDocHandler } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/es/jsdoc/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="jsdochandler" tabindex="-1">JsDocHandler <a class="header-anchor" href="#jsdochandler" aria-label="Permalink to &quot;JsDocHandler&quot;">​</a></h3><p><strong>参数</strong>：</p><ul><li><a href="#JsDocHandler">JsDocHandler</a><ul><li><a href="#new_JsDocHandler_new"><code>new JsDocHandler(options)</code></a></li><li><a href="#JsDocHandler.init"><code>.init(options)</code></a> ⇒ <code>object</code></li></ul></li></ul><p><a name="new_JsDocHandler_new"></a></p><h4 id="new-jsdochandler-options" tabindex="-1"><code>new JsDocHandler(options)</code> <a class="header-anchor" href="#new-jsdochandler-options" aria-label="Permalink to &quot;\`new JsDocHandler(options)\`&quot;">​</a></h4><p>处理jsdoc的脚本</p><ol><li>增加导航栏的分隔符</li><li>增加css</li><li>处理footer</li></ol><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>object</code></td><td><p>配置</p></td></tr><tr><td>[options.docsPath]</td><td><code>string</code></td><td><p>文档所在目录位置，默认为<code>./docs</code></p></td></tr><tr><td>[options.author]</td><td><code>string</code></td><td><p>作者，默认为空</p></td></tr><tr><td>[options.extraCss]</td><td><code>string</code></td><td><p>额外插入的css，默认为<code>.nav-separator</code>的一些样式</p></td></tr><tr><td>[options.extraScript]</td><td><code>string</code></td><td><p>额外插入的script</p></td></tr><tr><td>[options.navHandler]</td><td><code>function</code></td><td><p>处理API所在文件的方法</p></td></tr><tr><td>[options.isHandleNav]</td><td><code>boolean</code></td><td><p>是否处理导航栏，即插入文件名进行分隔，默认为false</p></td></tr></tbody></table><p><a name="JsDocHandler.init"></a></p><h4 id="jsdochandler-init-options-⇒-object" tabindex="-1"><code>JsDocHandler.init(options)</code> ⇒ <code>object</code> <a class="header-anchor" href="#jsdochandler-init-options-⇒-object" aria-label="Permalink to &quot;\`JsDocHandler.init(options)\` ⇒ &lt;code&gt;object&lt;/code&gt;&quot;">​</a></h4><p>初始化并运行</p><p><strong>Kind</strong>: static method of <a href="#JsDocHandler"><code>JsDocHandler</code></a><br><strong>Returns</strong>: <code>object</code> - <p>JsDocHandler实例</p></p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td><code>object</code></td><td><p>配置</p></td></tr><tr><td>[options.docsPath]</td><td><code>string</code></td><td><p>文档所在目录位置，默认为<code>./docs</code></p></td></tr><tr><td>[options.author]</td><td><code>string</code></td><td><p>作者，默认为空</p></td></tr><tr><td>[options.extraCss]</td><td><code>string</code></td><td><p>额外插入的css，默认为<code>.nav-separator</code>的一些样式</p></td></tr><tr><td>[options.navHandler]</td><td><code>string</code></td><td><p>处理API所在文件的方法</p></td></tr><tr><td>[options.isHandleNav]</td><td><code>boolean</code></td><td><p>是否处理导航栏，即插入文件名进行分隔，默认为false</p></td></tr></tbody></table><p><strong>Example</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JsDocHandler.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  author: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;novlan1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  docsPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extraCss: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.some-class{}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  navHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nav</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,17)]))}const E=t(d,[["render",e]]);export{k as __pageData,E as default};
