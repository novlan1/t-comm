import{_ as a,c as t,o as i,ag as e}from"./chunks/framework.C6Ot-a7E.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/lodash-mini.md","filePath":"zh/lodash-mini.md","lastUpdated":1748703471000}'),n={name:"zh/lodash-mini.md"};function h(p,s,r,l,d,o){return i(),t("div",null,s[0]||(s[0]=[e(`<h3 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { setWithString, merge } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不支持 tree-shaking 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { setWithString, merge} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/lib/lodash-mini/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 只支持 ESM 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { setWithString, merge} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/es/lodash-mini/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="setwithstring-obj-path-value" tabindex="-1"><code>setWithString(obj, path, value)</code> <a class="header-anchor" href="#setwithstring-obj-path-value" aria-label="Permalink to &quot;\`setWithString(obj, path, value)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>设置对象深层属性的值（类似 Lodash 的 _.set）</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>描述</th></tr></thead><tbody><tr><td>obj</td><td><p>目标对象</p></td></tr><tr><td>path</td><td><p>属性路径（字符串或数组，如 &#39;a.b.c&#39; 或 [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]）</p></td></tr><tr><td>value</td><td><p>要设置的值</p></td></tr></tbody></table><p><strong>返回</strong>: <p>修改后的对象</p></p><p><a name="merge"></a></p><h3 id="merge" tabindex="-1"><code>merge()</code> <a class="header-anchor" href="#merge" aria-label="Permalink to &quot;\`merge()\`&quot;">​</a></h3><p><strong>描述</strong>：<p>Merge objects which will create</p></p><p><strong>参数</strong>：</p>`,11)]))}const c=a(n,[["render",h]]);export{g as __pageData,c as default};
