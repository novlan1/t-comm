import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.C6Ot-a7E.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/functional-component.md","filePath":"zh/functional-component.md","lastUpdated":1748703471000}'),p={name:"zh/functional-component.md"};function e(h,s,l,o,k,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h3 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { showFunctionalComponent, showFunctionalComponentQueue } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不支持 tree-shaking 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { showFunctionalComponent, showFunctionalComponentQueue} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/lib/functional-component/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 只支持 ESM 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { showFunctionalComponent, showFunctionalComponentQueue} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/es/functional-component/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="showfunctionalcomponent-vueinstance-dialogcomponent-dialogoptions" tabindex="-1"><code>showFunctionalComponent(vueInstance, dialogComponent, dialogOptions)</code> <a class="header-anchor" href="#showfunctionalcomponent-vueinstance-dialogcomponent-dialogoptions" aria-label="Permalink to &quot;\`showFunctionalComponent(vueInstance, dialogComponent, dialogOptions)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>函数式调用组件</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>vueInstance</td><td><code>Object</code></td><td><p>页面Vue实例（一般为页面this）</p></td></tr><tr><td>dialogComponent</td><td><code>Object</code></td><td><p>弹窗组件，支持静态导入import Dialog from &#39;..&#39;和动态导入const Dialog = () =&gt; import(&#39;...&#39;)两种形式</p></td></tr><tr><td>dialogOptions</td><td><code>Object</code></td><td><p>弹窗参数Object</p></td></tr></tbody></table><p><strong>返回</strong>: <p>Promise 回调组件实例</p></p><p><strong>示例</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> showDateTimePicker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  onConfirm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  currentDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  showFunctionalComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/local-component/ui/gp-match-horz/date-picker&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      currentDate,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      minDate: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      onClickConfirm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dateNumber</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        onConfirm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date, dateNumber);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a name="showFunctionalComponentQueue"></a></p><h3 id="showfunctionalcomponentqueue-context-dialoglist-dialogcomponent" tabindex="-1"><code>showFunctionalComponentQueue(context, dialogList, dialogComponent)</code> <a class="header-anchor" href="#showfunctionalcomponentqueue-context-dialoglist-dialogcomponent" aria-label="Permalink to &quot;\`showFunctionalComponentQueue(context, dialogList, dialogComponent)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>根据弹窗队列（dialogList）依次弹出</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>context</td><td><code>object</code></td><td><p>Vue 页面 Vue实例上下文（一般为页面this、window.app、new Vue() 等）</p></td></tr><tr><td>dialogList</td><td><code>array</code></td><td><p>弹窗列表</p></td></tr><tr><td>dialogComponent</td><td><code>Object</code></td><td><p>弹窗组件，支持静态导入 import Dialog from &#39;..&#39; 和动态导入 const Dialog = () =&gt; import(&#39;...&#39;) 两种形式</p></td></tr></tbody></table>`,14)]))}const c=i(p,[["render",e]]);export{E as __pageData,c as default};
