import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.C6Ot-a7E.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/daily-merge.md","filePath":"zh/daily-merge.md","lastUpdated":1748703471000}'),n={name:"zh/daily-merge.md"};function d(p,s,l,h,r,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h3 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { dailyMerge } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不支持 tree-shaking 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { dailyMerge} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/lib/daily-merge/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 只支持 ESM 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { dailyMerge} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/es/daily-merge/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="dailymerge-param0" tabindex="-1"><code>dailyMerge(param0)</code> <a class="header-anchor" href="#dailymerge-param0" aria-label="Permalink to &quot;\`dailyMerge(param0)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>每日合并</p></p><ol><li>获取昨天有活跃的分支</li><li>对于每个分支，进行合并并推送 <ul><li>清理 Git 环境</li><li>切到主分支，并拉最新代码</li><li>切到当前分支，拉最新代码</li><li>尝试执行 git merge</li><li>对比 merge 前后的 commit 信息是否相同，作为判断 merge 是否成功的依据</li></ul></li><li>发送机器人消息</li></ol><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>param0</td><td><code>object</code></td><td></td><td><p>参数</p></td></tr><tr><td>param0.webhookUrl</td><td><code>string</code></td><td></td><td><p>机器人地址</p></td></tr><tr><td>param0.appName</td><td><code>string</code></td><td></td><td><p>项目名称</p></td></tr><tr><td>param0.devRoot</td><td><code>string</code></td><td></td><td><p>项目根路径</p></td></tr><tr><td>param0.baseUrl</td><td><code>string</code></td><td></td><td><p>基础请求 url</p></td></tr><tr><td>param0.repoName</td><td><code>string</code></td><td></td><td><p>仓库名称</p></td></tr><tr><td>param0.privateToken</td><td><code>string</code></td><td></td><td><p>密钥</p></td></tr><tr><td>[param0.isDryRun]</td><td><code>boolean</code></td><td><code>false</code></td><td><p>是否演练</p></td></tr><tr><td>[param0.mainBranch]</td><td><code>string</code></td><td><code>&quot;&#39;develop&#39;&quot;</code></td><td><p>主分支</p></td></tr><tr><td>[param0.whiteBranchReg]</td><td><code>Regexp</code></td><td><code>/^release|develop|hotfix\\/.+$/</code></td><td><p>不处理的分支正则</p></td></tr></tbody></table><p><strong>示例</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dailyMerge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  webhookUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  appName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  devRoot: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  baseUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  repoName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  privateToken: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  isDryRun: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,9)]))}const g=i(n,[["render",d]]);export{E as __pageData,g as default};
