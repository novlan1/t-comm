import{_ as s,c as a,o as e,ag as n}from"./chunks/framework.C6Ot-a7E.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/node.md","filePath":"zh/node.md","lastUpdated":1748703471000}'),i={name:"zh/node.md"};function d(p,t,r,o,l,h){return e(),a("div",null,t[0]||(t[0]=[n(`<h3 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parseCommentJson,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  readCommentJson,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  innerCopyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  copyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  deleteFolder,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rmEmptyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  copyFile,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  traverseFolder,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  execCommand,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  execCommandAll</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不支持 tree-shaking 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parseCommentJson,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  readCommentJson,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  innerCopyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  copyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  deleteFolder,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rmEmptyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  copyFile,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  traverseFolder,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  execCommand,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  execCommandAll</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/lib/node/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 只支持 ESM 的项目</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  parseCommentJson,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  readCommentJson,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  innerCopyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  copyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  deleteFolder,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rmEmptyDir,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  copyFile,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  traverseFolder,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  execCommand,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  execCommandAll</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t-comm/es/node/index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="parsecommentjson-content" tabindex="-1"><code>parseCommentJson(content)</code> <a class="header-anchor" href="#parsecommentjson-content" aria-label="Permalink to &quot;\`parseCommentJson(content)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>解析带注释的 json 文件</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>描述</th></tr></thead><tbody><tr><td>content</td><td><p>原始文件内容</p></td></tr></tbody></table><p><strong>返回</strong>: <p>json数据</p></p><p><a name="readCommentJson"></a></p><h3 id="readcommentjson-file" tabindex="-1"><code>readCommentJson(file)</code> <a class="header-anchor" href="#readcommentjson-file" aria-label="Permalink to &quot;\`readCommentJson(file)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>获取带注释的 json 文件内容</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td><p>文件路径</p></td></tr></tbody></table><p><strong>返回</strong>: <p>json数据</p></p><p><a name="innerCopyDir"></a></p><h3 id="innercopydir-src-dist" tabindex="-1"><code>innerCopyDir(src, dist)</code> <a class="header-anchor" href="#innercopydir-src-dist" aria-label="Permalink to &quot;\`innerCopyDir(src, dist)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>复制目录、子目录，及其中的文件</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>src</td><td><code>String</code></td><td><p>要复制的目录</p></td></tr><tr><td>dist</td><td><code>String</code></td><td><p>复制到目标目录</p></td></tr></tbody></table><p><a name="copyDir"></a></p><h3 id="copydir-src-dist-callback" tabindex="-1"><code>copyDir(src, dist, callback)</code> <a class="header-anchor" href="#copydir-src-dist-callback" aria-label="Permalink to &quot;\`copyDir(src, dist, callback)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>拷贝目录以及子文件</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th></tr></thead><tbody><tr><td>src</td><td><code>Object</code></td></tr><tr><td>dist</td><td><code>Object</code></td></tr><tr><td>callback</td><td><code>Object</code></td></tr></tbody></table><p><a name="deleteFolder"></a></p><h3 id="deletefolder-path" tabindex="-1"><code>deleteFolder(path)</code> <a class="header-anchor" href="#deletefolder-path" aria-label="Permalink to &quot;\`deleteFolder(path)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>删除目录</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th></tr></thead><tbody><tr><td>path</td><td><code>Object</code></td></tr></tbody></table><p><a name="rmEmptyDir"></a></p><h3 id="rmemptydir-path-level" tabindex="-1"><code>rmEmptyDir(path, level)</code> <a class="header-anchor" href="#rmemptydir-path-level" aria-label="Permalink to &quot;\`rmEmptyDir(path, level)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>递归删除空目录</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td><p>路径</p></td></tr><tr><td>level</td><td><p>层级</p></td></tr></tbody></table><p><a name="copyFile"></a></p><h3 id="copyfile-from-to" tabindex="-1"><code>copyFile(from, to)</code> <a class="header-anchor" href="#copyfile-from-to" aria-label="Permalink to &quot;\`copyFile(from, to)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>拷贝文件</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>from</td><td><code>Object</code></td><td><p>文件来自那里</p></td></tr><tr><td>to</td><td><code>Object</code></td><td><p>拷贝到那里</p></td></tr></tbody></table><p><a name="traverseFolder"></a></p><h3 id="traversefolder-cb-path" tabindex="-1"><code>traverseFolder(cb, path)</code> <a class="header-anchor" href="#traversefolder-cb-path" aria-label="Permalink to &quot;\`traverseFolder(cb, path)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>递归遍历文件夹，并执行某操作</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>cb</td><td><code>function</code></td><td><p>回调参数</p></td></tr><tr><td>path</td><td><code>String</code></td><td><p>文件夹或文件路径</p></td></tr></tbody></table><p><a name="execCommand"></a></p><h3 id="execcommand-command-root-stdio" tabindex="-1"><code>execCommand(command, root, stdio)</code> <a class="header-anchor" href="#execcommand-command-root-stdio" aria-label="Permalink to &quot;\`execCommand(command, root, stdio)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>nodejs 中调用 child_process.execSync 执行命令， 这个方法会对输出结果截断，只返回第一行内容</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>command</td><td><code>string</code></td><td><p>命令</p></td></tr><tr><td>root</td><td><code>string</code></td><td><p>执行命令的目录</p></td></tr><tr><td>stdio</td><td><code>string</code> | <code>object</code></td><td><p>结果输出，默认为 pipe</p></td></tr></tbody></table><p><strong>返回</strong>: <code>string</code><br></p><p>命令执行结果</p><p><a name="execCommandAll"></a></p><h3 id="execcommandall-command-root-stdio" tabindex="-1"><code>execCommandAll(command, root, stdio)</code> <a class="header-anchor" href="#execcommandall-command-root-stdio" aria-label="Permalink to &quot;\`execCommandAll(command, root, stdio)\`&quot;">​</a></h3><p><strong>描述</strong>：<p>nodejs中调用 child_process.execSync 执行命令</p></p><p><strong>参数</strong>：</p><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>command</td><td><code>string</code></td><td><p>命令</p></td></tr><tr><td>root</td><td><code>string</code></td><td><p>执行命令的目录</p></td></tr><tr><td>stdio</td><td><code>string</code></td><td><p>结果输出，默认为 pipe</p></td></tr></tbody></table><p><strong>返回</strong>: <code>string</code><br></p><p>命令执行结果</p>`,57)]))}const E=s(i,[["render",d]]);export{k as __pageData,E as default};
